Module 7-base_geometry
Defines a BaseGeometry class with area() and integer_validator().

Doctests:
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()  # instantiation works

Valid integer should pass silently:
>>> bg.integer_validator("age", 5)

Zero should raise ValueError:
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

Negative should raise ValueError:
>>> bg.integer_validator("age", -4)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

Float should raise TypeError:
>>> bg.integer_validator("age", 13.5)
Traceback (most recent call last):
...
TypeError: age must be an integer

String should raise TypeError:
>>> bg.integer_validator("age", "4")
Traceback (most recent call last):
...
TypeError: age must be an integer

Tuple should raise TypeError:
>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
...
TypeError: age must be an integer

List should raise TypeError:
>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
...
TypeError: age must be an integer

Boolean should raise TypeError:
>>> bg.integer_validator("age", True)
Traceback (most recent call last):
...
TypeError: age must be an integer

Set should raise TypeError:
>>> bg.integer_validator("age", {3, 4})
Traceback (most recent call last):
...
TypeError: age must be an integer

None should raise TypeError:
>>> bg.integer_validator("age", None)
Traceback (most recent call last):
...
TypeError: age must be an integer

area() should raise Exception:
>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented
